`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2024/11/15 13:16:41
// Design Name: 
// Module Name: Ins_Memory
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module Ins_Memory(
    input [31:0]In_Addr,
    input RW,
    input [31:0]Ins_Data_in,
    output reg [31:0]Ins_Data_out
    );
    
    
    reg [7:0]Ins[0:127];
    integer i=0;
    initial begin
        {Ins[0*4],Ins[0*4+1],Ins[0*4+2],Ins[0*4+3]}=32'b00010000000000000000000000000111;
        {Ins[1*4],Ins[1*4+1],Ins[1*4+2],Ins[1*4+3]}=32'b00010000000000010000000000000011;
        {Ins[2*4],Ins[2*4+1],Ins[2*4+2],Ins[2*4+3]}=32'b00000100000000100000000000000101;
        {Ins[3*4],Ins[3*4+1],Ins[3*4+2],Ins[3*4+3]}=32'b00001000010000110000000000001000;
        {Ins[4*4],Ins[4*4+1],Ins[4*4+2],Ins[4*4+3]}=32'b00000000001000100010000000000000;
        {Ins[5*4],Ins[5*4+1],Ins[5*4+2],Ins[5*4+3]}=32'b00000000010000010010100000000001;
        {Ins[6*4],Ins[6*4+1],Ins[6*4+2],Ins[6*4+3]}=32'b00000000011000010011000000000010;
        {Ins[7*4],Ins[7*4+1],Ins[7*4+2],Ins[7*4+3]}=32'b00000000100000110011100000000011;
        {Ins[8*4],Ins[8*4+1],Ins[8*4+2],Ins[8*4+3]}=32'b00100100010000110000000000000111;
        {Ins[9*4],Ins[9*4+1],Ins[9*4+2],Ins[9*4+3]}=32'b00101000000000100000000000000101;
        {Ins[10*4],Ins[10*4+1],Ins[10*4+2],Ins[10*4+3]}=32'b00011100000000000000000000001011;
        {Ins[11*4],Ins[11*4+1],Ins[11*4+2],Ins[11*4+3]}=32'b00000000000000110100000010000100;
        {Ins[12*4],Ins[12*4+1],Ins[12*4+2],Ins[12*4+3]}=32'b00001100000000100000000000000001;
        {Ins[13*4],Ins[13*4+1],Ins[13*4+2],Ins[13*4+3]}=32'b00010100000000110000000000000001;
//        {Ins[14*4],Ins[14*4+1],Ins[14*4+2],Ins[14*4+3]}=32'b;
        {Ins[15*4],Ins[15*4+1],Ins[15*4+2],Ins[15*4+3]}=32'b00011000000000110000000000000001;
        {Ins[16*4],Ins[16*4+1],Ins[16*4+2],Ins[16*4+3]}=32'b00100000101000000000000000000010;
//        {Ins[17*4],Ins[17*4+1],Ins[17*4+2],Ins[17*4+3]}=32'b;
//        {Ins[18*4],Ins[18*4+1],Ins[18*4+2],Ins[18*4+3]}=32'b;
        {Ins[19*4],Ins[19*4+1],Ins[19*4+2],Ins[19*4+3]}=32'b11111100000000000000000000000000;



        



    end
    
    
    
    
    always@(*)
    begin
        if(RW) //ÎÞ²Ù×÷
        begin
            Ins_Data_out<={Ins[In_Addr],Ins[In_Addr+1],Ins[In_Addr+2],Ins[In_Addr+3]};
//            Ins[In_Addr]=Data_in;
//            for(i=0; i<32; i=i+2)
//                Ins[i]<=32'hffff_fffa;
//                Ins[i+1]<=32'hffff_ff11;
        end 
        else 
        begin
            
            Ins_Data_out<={Ins[In_Addr],Ins[In_Addr+1],Ins[In_Addr+2],Ins[In_Addr+3]};
        end
             
                
    end        
endmodule
